# 个人技术栈

[TOC]

## C/C++语言基础 

- 关键词含义，语言底层实现机制（虚函数，引用等），面向对象，模板泛型编程。
- 编译链接机制，内存布局，对象模型
- 智能指针RAII，**手写简单版的智能指针**
- C++11部分新特性：右值引用，完美转发等。
- 部分设计模式，安全实现单例模式，观察者模式，Reactor模式
- STL源码剖析

>
参考书籍：C++primer  STL源码剖析  effective系列，深入探索C++对象模型



## Linux

- 多进程，多线程编程以及相关系统调用， 包括高级系统调用函数，如vfork等

- Linux内存管理，包括物理内存，虚拟内存，分页分段机制，slab机制，malloc，brk等函数的内部实现

- 了解文件系统，特别是VPS，linux文件的软硬件链接，linux读取文件机制等。

- 死锁机制，产生的原因，如何解决等，消费者生产者，读者写者，哲学家就餐等。

- Linux进程调度，CFS等

- Linux内存布局，和C++内存布局重合。

- Linux下程序是如何被编译连接的，静态链接，动态链接，以及加载执行，csapp第七章，

- 常见命令，性能监控，top,ps,IO监控，iostat，查看网络连接状态，netstat，lsof等

- 进程通信机制，最好结合内核说明。

## 计算机网络

- TCP是重中之重，比如拥塞控制，流量控制，快速重传这些，nagle算法，等。

  一些典型问题：

  - UDP如何实现可靠传输
  - TCP如何拆包，解决粘包
  - TIME_WAIT过多怎么造成，如何解决
  
- 套接字基本编程的几个函数要非常熟悉

- 进一步了解Linux五大IO模型，三大IO复用方式

- ARP、DHCP协议如何工作

- DNS协议

- HTTP,HTTPS协议

## 算法

- 链表的各种题型
- 二叉树，平衡二叉树，二叉搜索树
- 二分查找以及几种变体，lower_bound,upper_bound
- 几大排序算法，稳定性，极端情况，做到手写快排，堆排序，，快排优化思路。
- hash
- 贪心、回溯、bfs、dfs、动态规划
- Trie树
- 手写LRU，双向链表+哈希
- 海量数据处理思路
- KMP匹配算法



## 数据库

- 索引，有哪些分类，B+树，哈希索引，B+树相关的问题要熟悉
- 事务，特点（ACID），mysql搜索引擎默认支持的事务级别类型，
- 锁，封锁方式，如何避免死锁
- 数据库设计范式



## 多线程编程

- 基本的posix API函数

- 互斥锁和条件变量

  

## 项目

- 高并发服务器 flydragon
- http服务器
- 聊天服务器
- muduo

> 主要问如何测试，运行效果，如何改进，用到的基础知识，



## 开源组件

- redis
- nginx
- 了解一下原理。